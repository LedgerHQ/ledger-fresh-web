import Head from "next/head";
import Image from "next/image";

import { useState, useEffect } from "react";
import styles from "@/styles/Home.module.css";
import Main from "@/components/MainContainer";
import { Header } from "@/components/Header";
import { LinkButton, Button } from "@/components/Button";
import {
  getAccounts,
  WalletAccount,
} from "@/services/accountStorage/account.storage";
import { TokenList } from "@/components/TokenList";
import TabBar from "@/components/TabBar/TabBar";
import { AddLedgerCard } from "@/components/Card";
import { useRouter } from "next/router";
import { addTransaction } from "@/services/transactionStorage/transaction.storage";
import { useNotificationContext } from "@/services/notificationProvider";

export default function Home() {
  const [account, setAccount] = useState<WalletAccount>();
  const router = useRouter();
  const { setNotification } = useNotificationContext();
  useEffect(() => {
    const accounts = getAccounts();
    if (accounts.length) {
      setAccount(accounts[0]);
    } else {
      router.push("/onboarding");
    }
  }, []);

  async function requestFund() {
    if (!account) return;
    const res = await fetch("/api/deployer/fund", {
      method: "POST",
      body: JSON.stringify({
        address: account.address,
      }),
    });
    const body: any = await res.json();

    if (res.status != 200) {
      setNotification({
        networkId: account.networkId,
        hash: body.transaction_hash,
        type: 99,
        data: [body.transaction_hash],
        hidden: false,
      });
      return;
    }
    const notif = {
      networkId: account.networkId,
      hash: body.transaction_hash,
      type: 21,
      data: [],
      hidden: false,
    };
    setNotification(notif);
    addTransaction(notif);
  }

  return (
    <>
      <Head>
        <title>
          Ledger Fresh -- Abstract your account using this web wallet
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="page">
        {account ? (
          <Main variant="left">
            <div className={styles.buttonRow}>
              <Button variant="secondary" onClick={() => requestFund()}>
                Fund
              </Button>
              <LinkButton href={"/send"} variant="secondary">
                Send
              </LinkButton>
            </div>
            <br />
            <TokenList account={account} />
          </Main>
        ) : (
          <footer className={styles.footer}>
            <LinkButton href={"/onboarding"}>Onboarding</LinkButton>
          </footer>
        )}
        <section>
          <AddLedgerCard />
          <TabBar initialActiveIndex={0}>
            <Image
              src="/Icons/wallet.svg"
              alt="back"
              width={20}
              height={20}
              priority
            />
            <Image
              src="/Icons/clock.svg"
              alt="back"
              width={20}
              height={20}
              priority
            />
            <Image
              src="/Icons/planet.svg"
              alt="back"
              width={20}
              height={20}
              priority
            />
            <Image
              src="/Icons/power.svg"
              alt="back"
              width={20}
              height={20}
              priority
            />
          </TabBar>
        </section>
      </div>
    </>
  );
}
